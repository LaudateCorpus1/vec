TEXT ·_add_int64(SB), $0-32

	MOVD input1+0(FP),  R0
	MOVD input2+8(FP),  R1
	MOVD output+16(FP), R2
	MOVD size+24(FP),   R3

  WORD $0xd341fc66		// LSR $1, R3, R6
  WORD $0x710000df		// CMPW $0, R6
  WORD $0x540001ad		// BLE 13(PC)
  WORD $0x510004c5		// SUBW $1, R6, R5
  WORD $0xd2800004		// MOVD $0, R4
  WORD $0x910004a5		// ADD $1, R5, R5
  WORD $0xd37ceca5		// LSL $4, R5, R5
  WORD $0xd503201f		// NOOP
  WORD $0x3ce46800		// MOVD (R0)(R4), V0
  WORD $0x3ce46821		// MOVD (R1)(R4), V1
  WORD $0x4ee18400		// VADD V1.D2, V0.D2, V0.D2
  WORD $0x3ca46840		// MOVD V0, (R2)(R4)
  WORD $0x91004084		// ADD $16, R4, R4
  WORD $0xeb05009f		// CMP R5, R4
  WORD $0x54ffff41		// BNE -6(PC)
  WORD $0x531f78c6		// LSLW $1, R6, R6
  WORD $0x93407ccc		// SXTW R6, R12
  WORD $0xeb0c007f		// CMP R12, R3
  WORD $0x540008e9		// BLS 71(PC)
  WORD $0x91000984		// ADD $2, R12, R4
  WORD $0xcb0c0069		// SUB R12, R3, R9
  WORD $0xd37df084		// LSL $3, R4, R4
  WORD $0xd1004088		// SUB $16, R4, R8
  WORD $0x8b040047		// ADD R4, R2, R7
  WORD $0x8b08002a		// ADD R8, R1, R10
  WORD $0x8b040025		// ADD R4, R1, R5
  WORD $0xeb0a00ff		// CMP R10, R7
  WORD $0x8b08004b		// ADD R8, R2, R11
  WORD $0xfa458162		// CCMP HI, R11, R5, $2
  WORD $0x8b080005		// ADD R8, R0, R5
  WORD $0x1a9f37ea		// CSETW HS, R10
  WORD $0x8b040004		// ADD R4, R0, R4
  WORD $0xeb0700bf		// CMP R7, R5
  WORD $0xaa0803e7		// MOVD R8, R7
  WORD $0xfa443162		// CCMP LO, R11, R4, $2
  WORD $0x1a9f37e4		// CSETW HS, R4
  WORD $0xf100193f		// CMP $6, R9
  WORD $0x0a040144		// ANDW R4, R10, R4
  WORD $0x1a9f97ea		// CSETW HI, R10
  WORD $0x6a04015f		// TSTW R4, R10
  WORD $0x54000640		// BEQ 50(PC)
  WORD $0xd3430ca5		// UBFX $3, R5, $1, R5
  WORD $0xd1000464		// SUB $1, R3, R4
  WORD $0xf10000bf		// CMP $0, R5
  WORD $0xcb0c0084		// SUB R12, R4, R4
  WORD $0xd2800047		// MOVD $2, R7
  WORD $0x9a9f14e7		// CSINC NE, R7, ZR, R7
  WORD $0xeb07009f		// CMP R7, R4
  WORD $0x540003a3		// BCC 29(PC)
  WORD $0xb40000e5		// CBZ R5, 7(PC)
  WORD $0xf86c7804		// MOVD (R0)(R12<<3), R4
  WORD $0x110004c6		// ADDW $1, R6, R6
  WORD $0xf86c7827		// MOVD (R1)(R12<<3), R7
  WORD $0x8b070084		// ADD R7, R4, R4
  WORD $0xf82c7844		// MOVD R4, (R2)(R12<<3)
  WORD $0x93407ccc		// SXTW R6, R12
  WORD $0xcb050129		// SUB R5, R9, R9
  WORD $0x8b050d05		// ADD R5<<3, R8, R5
  WORD $0x8b05000b		// ADD R5, R0, R11
  WORD $0x8b05002a		// ADD R5, R1, R10
  WORD $0xd341fd28		// LSR $1, R9, R8
  WORD $0x8b050045		// ADD R5, R2, R5
  WORD $0xd2800004		// MOVD $0, R4
  WORD $0xd2800007		// MOVD $0, R7
  WORD $0x3ce46940		// MOVD (R10)(R4), V0
  WORD $0x910004e7		// ADD $1, R7, R7
  WORD $0x3ce46961		// MOVD (R11)(R4), V1
  WORD $0xeb07011f		// CMP R7, R8
  WORD $0x4ee18400		// VADD V1.D2, V0.D2, V0.D2
  WORD $0x3ca468a0		// MOVD V0, (R5)(R4)
  WORD $0x91004084		// ADD $16, R4, R4
  WORD $0x54ffff28		// BHI -7(PC)
  WORD $0x927ff924		// AND $-2, R9, R4
  WORD $0x8b04018c		// ADD R4, R12, R12
  WORD $0x0b0400c6		// ADDW R4, R6, R6
  WORD $0xeb04013f		// CMP R4, R9
  WORD $0x540001a0		// BEQ 13(PC)
  WORD $0xf86c7804		// MOVD (R0)(R12<<3), R4
  WORD $0x110004c6		// ADDW $1, R6, R6
  WORD $0xf86c7825		// MOVD (R1)(R12<<3), R5
  WORD $0x93407cc6		// SXTW R6, R6
  WORD $0x8b050084		// ADD R5, R4, R4
  WORD $0xf82c7844		// MOVD R4, (R2)(R12<<3)
  WORD $0xeb0300df		// CMP R3, R6
  WORD $0x540000a2		// BCS 5(PC)
  WORD $0xf8667800		// MOVD (R0)(R6<<3), R0
  WORD $0xf8667821		// MOVD (R1)(R6<<3), R1
  WORD $0x8b010000		// ADD R1, R0, R0
  WORD $0xf8267840		// MOVD R0, (R2)(R6<<3)
  WORD $0xd65f03c0		// RET
  WORD $0xd37df063		// LSL $3, R3, R3
  WORD $0xd503201f		// NOOP
  WORD $0xf8676804		// MOVD (R0)(R7), R4
  WORD $0xf8676825		// MOVD (R1)(R7), R5
  WORD $0x8b050084		// ADD R5, R4, R4
  WORD $0xf8276844		// MOVD R4, (R2)(R7)
  WORD $0x910020e7		// ADD $8, R7, R7
  WORD $0xeb0300ff		// CMP R3, R7
  WORD $0x54ffff41		// BNE -6(PC)
  WORD $0xd65f03c0		// RET

TEXT ·_sub_int64(SB), $0-32

	MOVD input1+0(FP),  R0
	MOVD input2+8(FP),  R1
	MOVD output+16(FP), R2
	MOVD size+24(FP),   R3

  WORD $0xd341fc66		// LSR $1, R3, R6
  WORD $0x710000df		// CMPW $0, R6
  WORD $0x540001ad		// BLE 13(PC)
  WORD $0x510004c5		// SUBW $1, R6, R5
  WORD $0xd2800004		// MOVD $0, R4
  WORD $0x910004a5		// ADD $1, R5, R5
  WORD $0xd37ceca5		// LSL $4, R5, R5
  WORD $0xd503201f		// NOOP
  WORD $0x3ce46800		// MOVD (R0)(R4), V0
  WORD $0x3ce46821		// MOVD (R1)(R4), V1
  WORD $0x6ee18400		// VSUB V1.D2, V0.D2, V0.D2
  WORD $0x3ca46840		// MOVD V0, (R2)(R4)
  WORD $0x91004084		// ADD $16, R4, R4
  WORD $0xeb05009f		// CMP R5, R4
  WORD $0x54ffff41		// BNE -6(PC)
  WORD $0x531f78c6		// LSLW $1, R6, R6
  WORD $0x93407ccc		// SXTW R6, R12
  WORD $0xeb0c007f		// CMP R12, R3
  WORD $0x540008e9		// BLS 71(PC)
  WORD $0x91000984		// ADD $2, R12, R4
  WORD $0xcb0c0069		// SUB R12, R3, R9
  WORD $0xd37df084		// LSL $3, R4, R4
  WORD $0xd1004088		// SUB $16, R4, R8
  WORD $0x8b040047		// ADD R4, R2, R7
  WORD $0x8b08002a		// ADD R8, R1, R10
  WORD $0x8b040025		// ADD R4, R1, R5
  WORD $0xeb0a00ff		// CMP R10, R7
  WORD $0x8b08004b		// ADD R8, R2, R11
  WORD $0xfa458162		// CCMP HI, R11, R5, $2
  WORD $0x8b080005		// ADD R8, R0, R5
  WORD $0x1a9f37ea		// CSETW HS, R10
  WORD $0x8b040004		// ADD R4, R0, R4
  WORD $0xeb0700bf		// CMP R7, R5
  WORD $0xaa0803e7		// MOVD R8, R7
  WORD $0xfa443162		// CCMP LO, R11, R4, $2
  WORD $0x1a9f37e4		// CSETW HS, R4
  WORD $0xf100193f		// CMP $6, R9
  WORD $0x0a040144		// ANDW R4, R10, R4
  WORD $0x1a9f97ea		// CSETW HI, R10
  WORD $0x6a04015f		// TSTW R4, R10
  WORD $0x54000640		// BEQ 50(PC)
  WORD $0xd3430ca5		// UBFX $3, R5, $1, R5
  WORD $0xd1000464		// SUB $1, R3, R4
  WORD $0xf10000bf		// CMP $0, R5
  WORD $0xcb0c0084		// SUB R12, R4, R4
  WORD $0xd2800047		// MOVD $2, R7
  WORD $0x9a9f14e7		// CSINC NE, R7, ZR, R7
  WORD $0xeb07009f		// CMP R7, R4
  WORD $0x540003a3		// BCC 29(PC)
  WORD $0xb40000e5		// CBZ R5, 7(PC)
  WORD $0xf86c7804		// MOVD (R0)(R12<<3), R4
  WORD $0x110004c6		// ADDW $1, R6, R6
  WORD $0xf86c7827		// MOVD (R1)(R12<<3), R7
  WORD $0xcb070084		// SUB R7, R4, R4
  WORD $0xf82c7844		// MOVD R4, (R2)(R12<<3)
  WORD $0x93407ccc		// SXTW R6, R12
  WORD $0xcb050129		// SUB R5, R9, R9
  WORD $0x8b050d05		// ADD R5<<3, R8, R5
  WORD $0x8b05000b		// ADD R5, R0, R11
  WORD $0x8b05002a		// ADD R5, R1, R10
  WORD $0xd341fd28		// LSR $1, R9, R8
  WORD $0x8b050045		// ADD R5, R2, R5
  WORD $0xd2800004		// MOVD $0, R4
  WORD $0xd2800007		// MOVD $0, R7
  WORD $0x3ce46941		// MOVD (R10)(R4), V1
  WORD $0x910004e7		// ADD $1, R7, R7
  WORD $0x3ce46960		// MOVD (R11)(R4), V0
  WORD $0xeb07011f		// CMP R7, R8
  WORD $0x6ee18400		// VSUB V1.D2, V0.D2, V0.D2
  WORD $0x3ca468a0		// MOVD V0, (R5)(R4)
  WORD $0x91004084		// ADD $16, R4, R4
  WORD $0x54ffff28		// BHI -7(PC)
  WORD $0x927ff924		// AND $-2, R9, R4
  WORD $0x8b04018c		// ADD R4, R12, R12
  WORD $0x0b0400c6		// ADDW R4, R6, R6
  WORD $0xeb04013f		// CMP R4, R9
  WORD $0x540001a0		// BEQ 13(PC)
  WORD $0xf86c7804		// MOVD (R0)(R12<<3), R4
  WORD $0x110004c6		// ADDW $1, R6, R6
  WORD $0xf86c7825		// MOVD (R1)(R12<<3), R5
  WORD $0x93407cc6		// SXTW R6, R6
  WORD $0xcb050084		// SUB R5, R4, R4
  WORD $0xf82c7844		// MOVD R4, (R2)(R12<<3)
  WORD $0xeb0300df		// CMP R3, R6
  WORD $0x540000a2		// BCS 5(PC)
  WORD $0xf8667800		// MOVD (R0)(R6<<3), R0
  WORD $0xf8667821		// MOVD (R1)(R6<<3), R1
  WORD $0xcb010000		// SUB R1, R0, R0
  WORD $0xf8267840		// MOVD R0, (R2)(R6<<3)
  WORD $0xd65f03c0		// RET
  WORD $0xd37df063		// LSL $3, R3, R3
  WORD $0xd503201f		// NOOP
  WORD $0xf8676804		// MOVD (R0)(R7), R4
  WORD $0xf8676825		// MOVD (R1)(R7), R5
  WORD $0xcb050084		// SUB R5, R4, R4
  WORD $0xf8276844		// MOVD R4, (R2)(R7)
  WORD $0x910020e7		// ADD $8, R7, R7
  WORD $0xeb0300ff		// CMP R3, R7
  WORD $0x54ffff41		// BNE -6(PC)
  WORD $0xd65f03c0		// RET

TEXT ·_mul_int64(SB), $0-32

	MOVD input1+0(FP),  R0
	MOVD input2+8(FP),  R1
	MOVD output+16(FP), R2
	MOVD size+24(FP),   R3

  WORD $0xb4000163		// CBZ R3, 11(PC)
  WORD $0xd37df063		// LSL $3, R3, R3
  WORD $0xd2800004		// MOVD $0, R4
  WORD $0xd503201f		// NOOP
  WORD $0xf8646805		// MOVD (R0)(R4), R5
  WORD $0xf8646826		// MOVD (R1)(R4), R6
  WORD $0x9b067ca5		// MUL R6, R5, R5
  WORD $0xf8246845		// MOVD R5, (R2)(R4)
  WORD $0x91002084		// ADD $8, R4, R4
  WORD $0xeb04007f		// CMP R4, R3
  WORD $0x54ffff41		// BNE -6(PC)
  WORD $0xd65f03c0		// RET
